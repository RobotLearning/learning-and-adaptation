%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: C:\Users\okankoc\Learning-and-Adaptation\documentation\mscthesis\Pictures\functions.eps
%%CreationDate: 03/04/2013  03:35:53
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    50   244   560   547
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    50   244   560   547
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0600 6564 csm

    0     0  6120  3627 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6121 3628 rf
6 w
0 2956 4743 0 0 -2956 796 3228 4 MP
PP
-4743 0 0 2956 4743 0 0 -2956 796 3228 5 MP stroke
4 w
DO
SO
6 w
0 sg
 796  272 mt 5539  272 L
 796 3228 mt 5539 3228 L
5539 3228 mt 5539  272 L
 796 3228 mt  796  272 L
 796 3228 mt 5539 3228 L
 796 3228 mt  796  272 L
 796 3228 mt  796 3180 L
 796  272 mt  796  319 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 763 3373 mt 
(0) s
1270 3228 mt 1270 3180 L
1270  272 mt 1270  319 L
1187 3373 mt 
(0.1) s
1744 3228 mt 1744 3180 L
1744  272 mt 1744  319 L
1661 3373 mt 
(0.2) s
2218 3228 mt 2218 3180 L
2218  272 mt 2218  319 L
2135 3373 mt 
(0.3) s
2693 3228 mt 2693 3180 L
2693  272 mt 2693  319 L
2610 3373 mt 
(0.4) s
3167 3228 mt 3167 3180 L
3167  272 mt 3167  319 L
3084 3373 mt 
(0.5) s
3641 3228 mt 3641 3180 L
3641  272 mt 3641  319 L
3558 3373 mt 
(0.6) s
4116 3228 mt 4116 3180 L
4116  272 mt 4116  319 L
4033 3373 mt 
(0.7) s
4590 3228 mt 4590 3180 L
4590  272 mt 4590  319 L
4507 3373 mt 
(0.8) s
5064 3228 mt 5064 3180 L
5064  272 mt 5064  319 L
4981 3373 mt 
(0.9) s
5539 3228 mt 5539 3180 L
5539  272 mt 5539  319 L
5506 3373 mt 
(1) s
 796 3228 mt  843 3228 L
5539 3228 mt 5491 3228 L
 625 3272 mt 
(-4) s
 796 2932 mt  843 2932 L
5539 2932 mt 5491 2932 L
 625 2976 mt 
(-3) s
 796 2636 mt  843 2636 L
5539 2636 mt 5491 2636 L
 625 2680 mt 
(-2) s
 796 2341 mt  843 2341 L
5539 2341 mt 5491 2341 L
 625 2385 mt 
(-1) s
 796 2045 mt  843 2045 L
5539 2045 mt 5491 2045 L
 695 2089 mt 
(0) s
 796 1750 mt  843 1750 L
5539 1750 mt 5491 1750 L
 695 1794 mt 
(1) s
 796 1454 mt  843 1454 L
5539 1454 mt 5491 1454 L
 695 1498 mt 
(2) s
 796 1158 mt  843 1158 L
5539 1158 mt 5491 1158 L
 695 1202 mt 
(3) s
 796  863 mt  843  863 L
5539  863 mt 5491  863 L
 695  907 mt 
(4) s
 796  567 mt  843  567 L
5539  567 mt 5491  567 L
 695  611 mt 
(5) s
 796  272 mt  843  272 L
5539  272 mt 5491  272 L
 695  316 mt 
(6) s
 796  272 mt 5539  272 L
 796 3228 mt 5539 3228 L
5539 3228 mt 5539  272 L
 796 3228 mt  796  272 L
gs 796 272 4744 2957 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
48 -43 48 -9 48 -50 48 0 48 -29 48 -26 48 -2 48 -5 
48 -32 48 -34 47 -2 48 42 48 -36 48 50 48 -20 48 16 
48 -1 48 2 48 3 48 -17 48 -34 47 -9 48 -37 48 -13 
48 -73 48 -76 48 10 48 -50 48 -44 48 -11 48 -17 48 15 
47 -28 48 38 48 -9 48 104 48 18 48 39 48 133 48 40 
48 76 48 87 48 54 47 78 48 35 48 89 48 5 48 57 
48 4 48 74 48 -1 48 -7 48 8 48 -13 47 -25 48 1 
48 -17 48 -10 48 -10 48 -54 48 -30 48 -13 48 -42 48 -75 
48 20 47 -39 48 0 48 -20 48 -15 48 -8 48 12 48 -6 
48 23 48 1 48 20 48 53 47 12 48 3 48 49 48 29 
48 5 48 49 48 15 48 32 48 -4 48 43 48 -8 47 20 
48 10 48 30 48 39 48 16 48 14 48 48 48 -33 48 24 
48 187 48 286 47 477 796 598 100 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
48 8 48 3 48 7 48 28 48 24 48 43 48 24 48 22 
48 20 48 70 47 38 48 -1 48 50 48 9 48 17 48 -13 
48 22 48 -2 48 -39 48 6 48 -11 47 24 48 -45 48 -9 
48 28 48 -33 48 8 48 0 48 52 48 24 48 27 48 9 
47 23 48 28 48 64 48 21 48 9 48 44 48 7 48 47 
48 35 48 8 48 5 47 -22 48 28 48 -37 48 -4 48 39 
48 -5 48 -11 48 -18 48 61 48 -17 48 50 47 -9 48 22 
48 23 48 -1 48 14 48 19 48 -7 48 15 48 20 48 -16 
48 23 47 1 48 -27 48 29 48 12 48 -23 48 5 48 -33 
48 -43 48 -4 48 -29 48 -18 47 -56 48 -40 48 -70 48 -63 
48 -37 48 -69 48 -27 48 -83 48 -37 48 -44 48 -41 47 -19 
48 -27 48 -6 48 -8 48 -12 48 45 48 44 48 -54 48 40 
48 149 48 200 47 1054 796 427 100 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
48 -58 48 -32 48 -10 48 -12 48 -57 48 -15 48 -52 48 -24 
48 -18 48 -81 47 45 48 -54 48 23 48 -46 48 -24 48 9 
48 4 48 -14 48 -14 48 27 48 19 47 45 48 20 48 22 
48 58 48 43 48 39 48 47 48 38 48 61 48 74 48 28 
47 67 48 38 48 3 48 46 48 20 48 3 48 12 48 11 
48 1 48 12 48 -18 47 -9 48 -25 48 -3 48 11 48 -11 
48 -11 48 4 48 15 48 -20 48 -48 48 31 47 8 48 7 
48 1 48 -16 48 23 48 -11 48 -39 48 7 48 -17 48 -29 
48 -16 47 -18 48 32 48 -16 48 4 48 -18 48 -4 48 11 
48 -13 48 -7 48 -2 48 -47 47 -59 48 -58 48 -42 48 -44 
48 -75 48 -44 48 -31 48 -46 48 -39 48 -29 48 -15 47 12 
48 22 48 21 48 10 48 15 48 -5 48 27 48 34 48 22 
48 -37 48 -162 47 -241 796 2756 100 MP stroke
/c11 { 0.000000 0.750000 0.750000 sr} bdef
c11
48 5 48 -6 48 4 48 51 48 16 48 -7 48 4 48 38 
48 -8 48 17 47 6 48 15 48 8 48 -42 48 39 48 -7 
48 -14 48 55 48 -64 48 -12 48 2 47 -60 48 -27 48 -23 
48 -49 48 -37 48 -54 48 16 48 -3 48 -18 48 -56 48 -11 
47 -11 48 -11 48 -32 48 -6 48 -47 48 -16 48 -61 48 8 
48 -66 48 -15 48 -34 47 -55 48 -21 48 -38 48 -39 48 -22 
48 -47 48 -26 48 -43 48 -19 48 -31 48 -16 47 -2 48 -19 
48 -9 48 3 48 -12 48 14 48 65 48 21 48 19 48 37 
48 63 47 50 48 55 48 62 48 52 48 73 48 97 48 42 
48 73 48 79 48 36 48 65 47 69 48 16 48 72 48 28 
48 27 48 -23 48 -1 48 0 48 20 48 23 48 -11 47 29 
48 -59 48 21 48 -7 48 14 48 -16 48 33 48 -70 48 4 
48 14 48 62 47 312 796 1468 100 MP stroke
/c12 { 0.750000 0.000000 0.750000 sr} bdef
c12
48 6 48 -1 48 17 48 9 48 -26 48 22 48 1 48 -8 
48 17 48 1 47 -15 48 24 48 -1 48 -53 48 24 48 -44 
48 -14 48 -33 48 -27 48 -36 48 -66 47 -47 48 -39 48 -30 
48 -55 48 -53 48 -48 48 12 48 -27 48 -29 48 32 48 -30 
47 -30 48 39 48 0 48 33 48 29 48 36 48 39 48 41 
48 39 48 10 48 75 47 60 48 24 48 89 48 61 48 21 
48 61 48 -9 48 28 48 30 48 -1 48 21 47 -20 48 -41 
48 -59 48 -30 48 -43 48 -90 48 -29 48 -46 48 -52 48 -33 
48 -9 47 -27 48 -28 48 1 48 12 48 24 48 30 48 9 
48 22 48 3 48 52 48 42 47 99 48 98 48 26 48 54 
48 67 48 52 48 64 48 27 48 52 48 25 48 11 47 -24 
48 -31 48 -46 48 -7 48 -45 48 -76 48 -10 48 -77 48 -40 
48 -67 48 -28 47 312 796 1771 100 MP stroke
/c13 { 0.750000 0.750000 0.000000 sr} bdef
c13
48 -28 48 42 48 -12 48 -28 48 2 48 23 48 -11 48 17 
48 -4 48 22 47 54 48 -11 48 43 48 2 48 88 48 24 
48 12 48 20 48 26 48 29 48 -29 47 81 48 -14 48 -20 
48 25 48 -3 48 -5 48 -26 48 30 48 -30 48 -8 48 13 
47 -53 48 -38 48 -6 48 -14 48 -36 48 -75 48 -60 48 -26 
48 -42 48 -78 48 -56 47 -70 48 -32 48 -27 48 -53 48 -27 
48 -32 48 22 48 -29 48 19 48 -11 48 53 47 21 48 53 
48 -4 48 38 48 41 48 96 48 54 48 22 48 46 48 70 
48 82 47 36 48 40 48 23 48 12 48 38 48 5 48 -11 
48 14 48 4 48 -5 48 -18 47 -11 48 1 48 -62 48 3 
48 -31 48 -50 48 27 48 -47 48 6 48 -19 48 -25 47 1 
48 7 48 52 48 7 48 1 48 -15 48 15 48 -6 48 -4 
48 68 48 33 47 74 796 1716 100 MP stroke
0.25 sg
48 -36 48 29 48 3 48 -10 48 -7 48 26 48 -3 48 -25 
48 1 48 0 47 22 48 20 48 15 48 -4 48 27 48 -20 
48 10 48 -14 48 5 48 -11 48 16 47 -31 48 -49 48 -8 
48 -54 48 -72 48 -8 48 4 48 -92 48 -21 48 -58 48 -55 
47 -49 48 -57 48 -25 48 -34 48 -6 48 -11 48 -19 48 26 
48 16 48 34 48 27 47 45 48 93 48 75 48 57 48 100 
48 96 48 66 48 91 48 103 48 55 48 107 47 23 48 55 
48 35 48 54 48 3 48 -46 48 -29 48 -45 48 -69 48 -50 
48 -93 47 -98 48 -81 48 -126 48 -67 48 -108 48 -56 48 -74 
48 -58 48 -34 48 8 48 -16 47 7 48 13 48 -8 48 105 
48 22 48 74 48 55 48 81 48 44 48 44 48 56 47 83 
48 19 48 58 48 57 48 42 48 43 48 2 48 2 48 15 
48 98 48 104 47 54 796 1452 100 MP stroke
c8
48 9 48 -31 48 26 48 0 48 19 48 -2 48 -3 48 12 
48 -5 48 27 47 -7 48 13 48 39 48 33 48 -10 48 26 
48 -4 48 2 48 36 48 20 48 13 47 18 48 -9 48 32 
48 -7 48 -42 48 -18 48 -37 48 -15 48 -46 48 -52 48 -47 
47 -69 48 -68 48 -40 48 -101 48 -77 48 -25 48 -95 48 -42 
48 -14 48 -56 48 -1 47 -9 48 13 48 70 48 47 48 124 
48 61 48 94 48 85 48 130 48 121 48 113 47 91 48 107 
48 47 48 110 48 62 48 39 48 58 48 -24 48 7 48 -19 
48 -5 47 -68 48 -16 48 -45 48 -37 48 -45 48 -85 48 -57 
48 -28 48 -39 48 -84 48 -11 47 -48 48 -69 48 -8 48 -44 
48 -48 48 -33 48 -26 48 -5 48 -37 48 -41 48 4 47 -93 
48 -20 48 -62 48 -18 48 -75 48 -47 48 -26 48 -13 48 -12 
48 -114 48 -264 47 92 796 2867 100 MP stroke
c9
48 0 48 -33 48 41 48 -8 48 10 48 -17 48 38 48 0 
48 28 48 5 47 9 48 45 48 39 48 21 48 33 48 24 
48 14 48 46 48 62 48 -32 48 67 47 16 48 7 48 12 
48 -6 48 27 48 35 48 -30 48 79 48 -29 48 -4 48 37 
47 1 48 -2 48 -23 48 -14 48 3 48 -17 48 -3 48 -10 
48 -10 48 -31 48 -4 47 -3 48 -68 48 26 48 -36 48 29 
48 -14 48 17 48 -21 48 2 48 -3 48 -16 47 -23 48 -7 
48 -41 48 7 48 -57 48 -20 48 -87 48 -10 48 -68 48 -64 
48 -70 47 -78 48 -64 48 -17 48 -52 48 -49 48 -21 48 -4 
48 -22 48 -13 48 30 48 -25 47 52 48 32 48 32 48 3 
48 47 48 19 48 66 48 59 48 28 48 31 48 46 47 58 
48 54 48 -3 48 40 48 -17 48 15 48 -26 48 -22 48 -26 
48 -3 48 4 47 393 796 1578 100 MP stroke
c10
48 0 48 28 48 23 48 -5 48 -7 48 1 48 45 48 12 
48 34 48 16 47 16 48 22 48 -12 48 10 48 9 48 -35 
48 -5 48 -14 48 -12 48 -23 48 -47 47 -15 48 -45 48 -26 
48 -77 48 20 48 -11 48 -58 48 17 48 -4 48 25 48 -2 
47 65 48 -22 48 41 48 -5 48 48 48 1 48 11 48 -32 
48 -24 48 -26 48 -15 47 -56 48 -34 48 -33 48 -81 48 -25 
48 5 48 -80 48 -4 48 -3 48 27 48 47 47 21 48 55 
48 30 48 4 48 82 48 77 48 51 48 65 48 29 48 106 
48 25 47 38 48 70 48 37 48 30 48 47 48 68 48 16 
48 56 48 37 48 13 48 40 47 28 48 54 48 56 48 -1 
48 37 48 -7 48 -13 48 55 48 20 48 -8 48 -2 47 -34 
48 -55 48 1 48 -45 48 -17 48 -1 48 -68 48 -93 48 -102 
48 108 48 208 47 43 796 1214 100 MP stroke
gr

c10
0 sg
2947 3516 mt 
(x values) s
 543 1970 mt  -90 rotate
(y values) s
90 rotate
1084  123 mt 
(Functions drawn from a GP with squared exponential kernel, \
l = 0.1, ) s
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

4722  123 mt 
(s) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

4794  183 mt 
(n) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4847  123 mt 
( = 0.025) s
 779 3271 mt 
( ) s
5523  314 mt 
( ) s
1 sg
0 1502 1059 0 0 -1502 4421 1834 4 MP
PP
-1059 0 0 1502 1059 0 0 -1502 4421 1834 5 MP stroke
4 w
DO
SO
6 w
0 sg
4421  332 mt 5480  332 L
4421 1834 mt 5480 1834 L
5480 1834 mt 5480  332 L
4421 1834 mt 4421  332 L
4421 1834 mt 5480 1834 L
4421 1834 mt 4421  332 L
4421  332 mt 5480  332 L
4421 1834 mt 5480 1834 L
5480 1834 mt 5480  332 L
4421 1834 mt 4421  332 L
4892  466 mt 
(function1) s
gs 4421 332 1060 1503 rc
c8
362 0 4493 423 2 MP stroke
gr

c8
0 sg
4892  612 mt 
(function2) s
gs 4421 332 1060 1503 rc
c9
362 0 4493 570 2 MP stroke
gr

c9
0 sg
4892  759 mt 
(function3) s
gs 4421 332 1060 1503 rc
c10
362 0 4493 716 2 MP stroke
gr

c10
0 sg
4892  906 mt 
(function4) s
gs 4421 332 1060 1503 rc
c11
362 0 4493 863 2 MP stroke
gr

c11
0 sg
4892 1052 mt 
(function5) s
gs 4421 332 1060 1503 rc
c12
362 0 4493 1009 2 MP stroke
gr

c12
0 sg
4892 1199 mt 
(function6) s
gs 4421 332 1060 1503 rc
c13
362 0 4493 1156 2 MP stroke
gr

c13
0 sg
4892 1345 mt 
(function7) s
gs 4421 332 1060 1503 rc
0.25 sg
362 0 4493 1302 2 MP stroke
gr

0.25 sg
0 sg
4892 1492 mt 
(function8) s
gs 4421 332 1060 1503 rc
c8
362 0 4493 1449 2 MP stroke
gr

c8
0 sg
4892 1639 mt 
(function9) s
gs 4421 332 1060 1503 rc
c9
362 0 4493 1595 2 MP stroke
gr

c9
0 sg
4892 1785 mt 
(function10) s
gs 4421 332 1060 1503 rc
c10
362 0 4493 1742 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
